@using SWH.Models
@using SWH.Interfaces
@inject IProject ProjectService

<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="Project.Name" HelperText="Project Name" Variant="Variant.Text" ReadOnly="true"/>
        <MudTextField @bind-Value="Project.Location" HelperText="Location" Variant="Variant.Text" ReadOnly="true"/>
        <MudTextField @bind-Value="Project.Description" HelperText="Description" Variant="Variant.Text" ReadOnly="true"/>
        <MudTextField @bind-Value="Project.UserName" HelperText="Expert" Variant="Variant.Text" ReadOnly="true"/>
        <MudTextField @bind-Value="Project.PhoneNumber" HelperText="Phone Number" Variant="Variant.Text" ReadOnly="true"/>
        <MudTextField @bind-Value="Project.Cost" HelperText="Cost" Variant="Variant.Text" ReadOnly="true"/>
        <MudTextField @bind-Value="Project.CreatedAt" HelperText="Created Date" Variant="Variant.Text" ReadOnly="true"/>
        <MudTextField @bind-Value="Project.EstimatedDate" HelperText="Estimated Date" Variant="Variant.Text" ReadOnly="true"/>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Info" Variant="Variant.Filled" OnClick="Close">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    public MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public string Index { get; set; }

    private Project Project { get; set; }

    protected override void OnInitialized()
    {
        Project =  ProjectService.GetProject(Index);
    }

    private void Close()
    {
        MudDialog.Close(DialogResult.Ok(true));
    }

}