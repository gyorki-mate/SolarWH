@page "/"
@using SWH.Models
@using SWH.Interfaces
@using SWH.Shared.enums
@using Shelf = SWH.Shared.enums.Shelf
@inject IProduct ProductController
@inject IProductType ProductTypeController
@inject ICompartment CompartmentController


<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>
@* <MudButton OnClick="addProductType">add productType</MudButton> *@
<MudButton OnClick="addProduct">add prod</MudButton>
@* <MudButton OnClick="listProducts">list prod</MudButton> *@
@* <MudButton OnClick="addShelf">add shelf</MudButton> *@
@* <MudButton OnClick="listShelves">list shelf</MudButton> *@
@* <MudButton OnClick="updateShelf">kill shelves update</MudButton> *@
<MudButton OnClick="addCompartment">add compartment</MudButton>


Welcome to your new app.

@code{
    List<Product> _products = new();
    List<Models.Compartment> _shelves = new();
    List<ProductType> _productTypes = new();

    public void addProductType()
    {
        ProductType pt = new()
        {
            MaxCapacity = 8,
            Name = "Iron",
            Price = 750
        };
        ProductTypeController.AddProductType(pt);
    }

    public void addProduct()
    {
        Product p = new()
        {
            Quantity = 1,
        };

        ProductController.AddProduct(p, "6443e147191c8079c34efa92");
    }

    public async void listProducts()
    {
        var list = await ProductController.GetAllProducts();
        Console.WriteLine(list);
        foreach (var p in list)
        {
            Console.WriteLine(p.ProductType.Name + " " + p.ProductType.Price);
            Console.WriteLine(p.ProductType);
        }
    }

    public async void listShelves()
    {
    // var list = await CompartmentController.GetAllShelves();
    // Console.WriteLine(list);
    }

    // public void addShelf()
    // {
    //     Models.Compartment s = new()
    //     {
    //         column = 0,
    //         row = 0,
    // //add to Compartments list
    //         Compartments = new List<Shelf>()
    //         {
    //             new Shelf()
    //             {
    //                 id = 1,
    //                 Products = new List<Product>()
    //                 {
    //                     new Product()
    //                     {
    //                         Quantity = 1,
    //                         ProductType = new ProductType()
    //                         {
    //                             Name = "Iron",
    //                             Price = 750,
    //                             MaxCapacity = 8
    //                         }
    //                     }
    //                 },
    //             },
    //             new Shelf()
    //             {
    //                 id = 2,
    //                 Products = new List<Product>()
    //                 {
    //                     new Product()
    //                     {
    //                         Quantity = 7,
    //                         ProductType = new ProductType()
    //                         {
    //                             Name = "asd",
    //                             Price = 150,
    //                             MaxCapacity = 8
    //                         }
    //                     },
    //                     new Product()
    //                     {
    //                         Quantity = 1,
    //                         ProductType = new ProductType()
    //                         {
    //                             Name = "asd",
    //                             Price = 150,
    //                             MaxCapacity = 8
    //                         }
    //                     }
    //                 },
    //             },
    //         }
    //     };
    //     // CompartmentController.AddShelf(s);
    // }

    public async void addCompartment()
    {
    //create 16 shelves in the Shelves list
        var compartments = await CompartmentController.GetAllCompartments();
        List<Shelf> shelves = new();
        for (int i = 0; i < 16; i++)
        {
            Shelf s = new()
            {
                shelfId = i + 1 + compartments.Count * 16,
            };
            shelves.Add(s);
        }
        Compartment c = new()
        {
            Shelves = shelves,
            compartmentId = compartments.Count + 1,
        };
         CompartmentController.AddCompartment(c);
    }

}